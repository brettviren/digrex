// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dune.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dune.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ChannelActivity_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChannelActivity_reflection_ = NULL;
const ::google::protobuf::Descriptor* PrimitiveActivity_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PrimitiveActivity_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_dune_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_dune_2eproto() {
  protobuf_AddDesc_dune_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dune.proto");
  GOOGLE_CHECK(file != NULL);
  ChannelActivity_descriptor_ = file->message_type(0);
  static const int ChannelActivity_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelActivity, channel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelActivity, start_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelActivity, duration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelActivity, activity_),
  };
  ChannelActivity_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChannelActivity_descriptor_,
      ChannelActivity::default_instance_,
      ChannelActivity_offsets_,
      -1,
      -1,
      -1,
      sizeof(ChannelActivity),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelActivity, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelActivity, _is_default_instance_));
  PrimitiveActivity_descriptor_ = file->message_type(1);
  static const int PrimitiveActivity_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrimitiveActivity, fragid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrimitiveActivity, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrimitiveActivity, reference_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrimitiveActivity, primitives_),
  };
  PrimitiveActivity_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PrimitiveActivity_descriptor_,
      PrimitiveActivity::default_instance_,
      PrimitiveActivity_offsets_,
      -1,
      -1,
      -1,
      sizeof(PrimitiveActivity),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrimitiveActivity, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrimitiveActivity, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dune_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChannelActivity_descriptor_, &ChannelActivity::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PrimitiveActivity_descriptor_, &PrimitiveActivity::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dune_2eproto() {
  delete ChannelActivity::default_instance_;
  delete ChannelActivity_reflection_;
  delete PrimitiveActivity::default_instance_;
  delete PrimitiveActivity_reflection_;
}

void protobuf_AddDesc_dune_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_dune_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\ndune.proto\"Z\n\017ChannelActivity\022\017\n\007chann"
    "el\030\001 \001(\r\022\022\n\nstart_tick\030\003 \001(\r\022\020\n\010duration"
    "\030\004 \001(\r\022\020\n\010activity\030\005 \001(\r\"p\n\021PrimitiveAct"
    "ivity\022\016\n\006fragid\030\001 \001(\r\022\r\n\005count\030\002 \001(\r\022\026\n\016"
    "reference_tick\030\003 \001(\003\022$\n\nprimitives\030\005 \003(\013"
    "2\020.ChannelActivityb\006proto3", 226);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dune.proto", &protobuf_RegisterTypes);
  ChannelActivity::default_instance_ = new ChannelActivity();
  PrimitiveActivity::default_instance_ = new PrimitiveActivity();
  ChannelActivity::default_instance_->InitAsDefaultInstance();
  PrimitiveActivity::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dune_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dune_2eproto {
  StaticDescriptorInitializer_dune_2eproto() {
    protobuf_AddDesc_dune_2eproto();
  }
} static_descriptor_initializer_dune_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChannelActivity::kChannelFieldNumber;
const int ChannelActivity::kStartTickFieldNumber;
const int ChannelActivity::kDurationFieldNumber;
const int ChannelActivity::kActivityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChannelActivity::ChannelActivity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChannelActivity)
}

void ChannelActivity::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ChannelActivity::ChannelActivity(const ChannelActivity& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ChannelActivity)
}

void ChannelActivity::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  channel_ = 0u;
  start_tick_ = 0u;
  duration_ = 0u;
  activity_ = 0u;
}

ChannelActivity::~ChannelActivity() {
  // @@protoc_insertion_point(destructor:ChannelActivity)
  SharedDtor();
}

void ChannelActivity::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ChannelActivity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChannelActivity::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChannelActivity_descriptor_;
}

const ChannelActivity& ChannelActivity::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dune_2eproto();
  return *default_instance_;
}

ChannelActivity* ChannelActivity::default_instance_ = NULL;

ChannelActivity* ChannelActivity::New(::google::protobuf::Arena* arena) const {
  ChannelActivity* n = new ChannelActivity;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChannelActivity::Clear() {
// @@protoc_insertion_point(message_clear_start:ChannelActivity)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ChannelActivity, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ChannelActivity*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(channel_, activity_);

#undef ZR_HELPER_
#undef ZR_

}

bool ChannelActivity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChannelActivity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 channel = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_start_tick;
        break;
      }

      // optional uint32 start_tick = 3;
      case 3: {
        if (tag == 24) {
         parse_start_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_tick_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_duration;
        break;
      }

      // optional uint32 duration = 4;
      case 4: {
        if (tag == 32) {
         parse_duration:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &duration_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_activity;
        break;
      }

      // optional uint32 activity = 5;
      case 5: {
        if (tag == 40) {
         parse_activity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &activity_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChannelActivity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChannelActivity)
  return false;
#undef DO_
}

void ChannelActivity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChannelActivity)
  // optional uint32 channel = 1;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->channel(), output);
  }

  // optional uint32 start_tick = 3;
  if (this->start_tick() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->start_tick(), output);
  }

  // optional uint32 duration = 4;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->duration(), output);
  }

  // optional uint32 activity = 5;
  if (this->activity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->activity(), output);
  }

  // @@protoc_insertion_point(serialize_end:ChannelActivity)
}

::google::protobuf::uint8* ChannelActivity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ChannelActivity)
  // optional uint32 channel = 1;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->channel(), target);
  }

  // optional uint32 start_tick = 3;
  if (this->start_tick() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->start_tick(), target);
  }

  // optional uint32 duration = 4;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->duration(), target);
  }

  // optional uint32 activity = 5;
  if (this->activity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->activity(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ChannelActivity)
  return target;
}

int ChannelActivity::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ChannelActivity)
  int total_size = 0;

  // optional uint32 channel = 1;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel());
  }

  // optional uint32 start_tick = 3;
  if (this->start_tick() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->start_tick());
  }

  // optional uint32 duration = 4;
  if (this->duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->duration());
  }

  // optional uint32 activity = 5;
  if (this->activity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->activity());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChannelActivity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChannelActivity)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ChannelActivity* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ChannelActivity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChannelActivity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChannelActivity)
    MergeFrom(*source);
  }
}

void ChannelActivity::MergeFrom(const ChannelActivity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChannelActivity)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
  if (from.start_tick() != 0) {
    set_start_tick(from.start_tick());
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
  if (from.activity() != 0) {
    set_activity(from.activity());
  }
}

void ChannelActivity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChannelActivity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChannelActivity::CopyFrom(const ChannelActivity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChannelActivity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChannelActivity::IsInitialized() const {

  return true;
}

void ChannelActivity::Swap(ChannelActivity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChannelActivity::InternalSwap(ChannelActivity* other) {
  std::swap(channel_, other->channel_);
  std::swap(start_tick_, other->start_tick_);
  std::swap(duration_, other->duration_);
  std::swap(activity_, other->activity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChannelActivity::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChannelActivity_descriptor_;
  metadata.reflection = ChannelActivity_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChannelActivity

// optional uint32 channel = 1;
void ChannelActivity::clear_channel() {
  channel_ = 0u;
}
 ::google::protobuf::uint32 ChannelActivity::channel() const {
  // @@protoc_insertion_point(field_get:ChannelActivity.channel)
  return channel_;
}
 void ChannelActivity::set_channel(::google::protobuf::uint32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:ChannelActivity.channel)
}

// optional uint32 start_tick = 3;
void ChannelActivity::clear_start_tick() {
  start_tick_ = 0u;
}
 ::google::protobuf::uint32 ChannelActivity::start_tick() const {
  // @@protoc_insertion_point(field_get:ChannelActivity.start_tick)
  return start_tick_;
}
 void ChannelActivity::set_start_tick(::google::protobuf::uint32 value) {
  
  start_tick_ = value;
  // @@protoc_insertion_point(field_set:ChannelActivity.start_tick)
}

// optional uint32 duration = 4;
void ChannelActivity::clear_duration() {
  duration_ = 0u;
}
 ::google::protobuf::uint32 ChannelActivity::duration() const {
  // @@protoc_insertion_point(field_get:ChannelActivity.duration)
  return duration_;
}
 void ChannelActivity::set_duration(::google::protobuf::uint32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:ChannelActivity.duration)
}

// optional uint32 activity = 5;
void ChannelActivity::clear_activity() {
  activity_ = 0u;
}
 ::google::protobuf::uint32 ChannelActivity::activity() const {
  // @@protoc_insertion_point(field_get:ChannelActivity.activity)
  return activity_;
}
 void ChannelActivity::set_activity(::google::protobuf::uint32 value) {
  
  activity_ = value;
  // @@protoc_insertion_point(field_set:ChannelActivity.activity)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrimitiveActivity::kFragidFieldNumber;
const int PrimitiveActivity::kCountFieldNumber;
const int PrimitiveActivity::kReferenceTickFieldNumber;
const int PrimitiveActivity::kPrimitivesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrimitiveActivity::PrimitiveActivity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PrimitiveActivity)
}

void PrimitiveActivity::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PrimitiveActivity::PrimitiveActivity(const PrimitiveActivity& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PrimitiveActivity)
}

void PrimitiveActivity::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  fragid_ = 0u;
  count_ = 0u;
  reference_tick_ = GOOGLE_LONGLONG(0);
}

PrimitiveActivity::~PrimitiveActivity() {
  // @@protoc_insertion_point(destructor:PrimitiveActivity)
  SharedDtor();
}

void PrimitiveActivity::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PrimitiveActivity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PrimitiveActivity::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PrimitiveActivity_descriptor_;
}

const PrimitiveActivity& PrimitiveActivity::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dune_2eproto();
  return *default_instance_;
}

PrimitiveActivity* PrimitiveActivity::default_instance_ = NULL;

PrimitiveActivity* PrimitiveActivity::New(::google::protobuf::Arena* arena) const {
  PrimitiveActivity* n = new PrimitiveActivity;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PrimitiveActivity::Clear() {
// @@protoc_insertion_point(message_clear_start:PrimitiveActivity)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PrimitiveActivity, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PrimitiveActivity*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(fragid_, reference_tick_);

#undef ZR_HELPER_
#undef ZR_

  primitives_.Clear();
}

bool PrimitiveActivity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PrimitiveActivity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 fragid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fragid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // optional uint32 count = 2;
      case 2: {
        if (tag == 16) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_reference_tick;
        break;
      }

      // optional int64 reference_tick = 3;
      case 3: {
        if (tag == 24) {
         parse_reference_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &reference_tick_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_primitives;
        break;
      }

      // repeated .ChannelActivity primitives = 5;
      case 5: {
        if (tag == 42) {
         parse_primitives:
          DO_(input->IncrementRecursionDepth());
         parse_loop_primitives:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_primitives()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_primitives;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PrimitiveActivity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PrimitiveActivity)
  return false;
#undef DO_
}

void PrimitiveActivity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PrimitiveActivity)
  // optional uint32 fragid = 1;
  if (this->fragid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->fragid(), output);
  }

  // optional uint32 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  // optional int64 reference_tick = 3;
  if (this->reference_tick() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->reference_tick(), output);
  }

  // repeated .ChannelActivity primitives = 5;
  for (unsigned int i = 0, n = this->primitives_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->primitives(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PrimitiveActivity)
}

::google::protobuf::uint8* PrimitiveActivity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PrimitiveActivity)
  // optional uint32 fragid = 1;
  if (this->fragid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->fragid(), target);
  }

  // optional uint32 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  // optional int64 reference_tick = 3;
  if (this->reference_tick() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->reference_tick(), target);
  }

  // repeated .ChannelActivity primitives = 5;
  for (unsigned int i = 0, n = this->primitives_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->primitives(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PrimitiveActivity)
  return target;
}

int PrimitiveActivity::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PrimitiveActivity)
  int total_size = 0;

  // optional uint32 fragid = 1;
  if (this->fragid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fragid());
  }

  // optional uint32 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  // optional int64 reference_tick = 3;
  if (this->reference_tick() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->reference_tick());
  }

  // repeated .ChannelActivity primitives = 5;
  total_size += 1 * this->primitives_size();
  for (int i = 0; i < this->primitives_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->primitives(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PrimitiveActivity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PrimitiveActivity)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PrimitiveActivity* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PrimitiveActivity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PrimitiveActivity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PrimitiveActivity)
    MergeFrom(*source);
  }
}

void PrimitiveActivity::MergeFrom(const PrimitiveActivity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PrimitiveActivity)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  primitives_.MergeFrom(from.primitives_);
  if (from.fragid() != 0) {
    set_fragid(from.fragid());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.reference_tick() != 0) {
    set_reference_tick(from.reference_tick());
  }
}

void PrimitiveActivity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PrimitiveActivity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrimitiveActivity::CopyFrom(const PrimitiveActivity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PrimitiveActivity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrimitiveActivity::IsInitialized() const {

  return true;
}

void PrimitiveActivity::Swap(PrimitiveActivity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrimitiveActivity::InternalSwap(PrimitiveActivity* other) {
  std::swap(fragid_, other->fragid_);
  std::swap(count_, other->count_);
  std::swap(reference_tick_, other->reference_tick_);
  primitives_.UnsafeArenaSwap(&other->primitives_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PrimitiveActivity::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PrimitiveActivity_descriptor_;
  metadata.reflection = PrimitiveActivity_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PrimitiveActivity

// optional uint32 fragid = 1;
void PrimitiveActivity::clear_fragid() {
  fragid_ = 0u;
}
 ::google::protobuf::uint32 PrimitiveActivity::fragid() const {
  // @@protoc_insertion_point(field_get:PrimitiveActivity.fragid)
  return fragid_;
}
 void PrimitiveActivity::set_fragid(::google::protobuf::uint32 value) {
  
  fragid_ = value;
  // @@protoc_insertion_point(field_set:PrimitiveActivity.fragid)
}

// optional uint32 count = 2;
void PrimitiveActivity::clear_count() {
  count_ = 0u;
}
 ::google::protobuf::uint32 PrimitiveActivity::count() const {
  // @@protoc_insertion_point(field_get:PrimitiveActivity.count)
  return count_;
}
 void PrimitiveActivity::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:PrimitiveActivity.count)
}

// optional int64 reference_tick = 3;
void PrimitiveActivity::clear_reference_tick() {
  reference_tick_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PrimitiveActivity::reference_tick() const {
  // @@protoc_insertion_point(field_get:PrimitiveActivity.reference_tick)
  return reference_tick_;
}
 void PrimitiveActivity::set_reference_tick(::google::protobuf::int64 value) {
  
  reference_tick_ = value;
  // @@protoc_insertion_point(field_set:PrimitiveActivity.reference_tick)
}

// repeated .ChannelActivity primitives = 5;
int PrimitiveActivity::primitives_size() const {
  return primitives_.size();
}
void PrimitiveActivity::clear_primitives() {
  primitives_.Clear();
}
const ::ChannelActivity& PrimitiveActivity::primitives(int index) const {
  // @@protoc_insertion_point(field_get:PrimitiveActivity.primitives)
  return primitives_.Get(index);
}
::ChannelActivity* PrimitiveActivity::mutable_primitives(int index) {
  // @@protoc_insertion_point(field_mutable:PrimitiveActivity.primitives)
  return primitives_.Mutable(index);
}
::ChannelActivity* PrimitiveActivity::add_primitives() {
  // @@protoc_insertion_point(field_add:PrimitiveActivity.primitives)
  return primitives_.Add();
}
::google::protobuf::RepeatedPtrField< ::ChannelActivity >*
PrimitiveActivity::mutable_primitives() {
  // @@protoc_insertion_point(field_mutable_list:PrimitiveActivity.primitives)
  return &primitives_;
}
const ::google::protobuf::RepeatedPtrField< ::ChannelActivity >&
PrimitiveActivity::primitives() const {
  // @@protoc_insertion_point(field_list:PrimitiveActivity.primitives)
  return primitives_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
