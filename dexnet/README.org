+#title: DexNet

Much more needs to be written here.

* Developer guidance

1) Pick a name your component, here ~component~.
2) add a protocol file to ~pb/component.proto~ for the component's control protocol.
3) add a new or understand an existing protocol file for the external IPC
4) add a ~inc/dexnet/component.h~ declaring an ~action~ function and ~config~ struct.
5) add a ~src/component.cc~ implementation file
6) add a ~test/test_component.cc~ to test the component

Implementation file has the following parts:

- context :: a ~struct~ or ~class~ to provide the context data for the component.
- events :: some ~struct~, usually empty, for any FSM events that are needed beyond protobuf messages types.
- states :: some ~struct~ , usually empty, to represent atomic states in the FSM
- actions :: lambdas which may take context and event or event, FSM, dep, sub (fixme: should not need to carry through the dep+sub)
- guards :: lambda returning bool.
- fsm :: a callable ~struct~ returning the transition table
- actor :: the actor (~zactor~) function.  This is the only thing exported from the implementation.


